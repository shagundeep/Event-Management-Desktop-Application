/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project;
import java.awt.print.PrinterException;
import javax.swing.*;
import java.sql.*;
import java.text.MessageFormat;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.table.DefaultTableModel;
/**
 *
 * @author shagu
 */
public class eventslist extends javax.swing.JInternalFrame implements globalvariable {

    /**
     * Creates new form eventslist
     */
    public eventslist() {
        initComponents();
         Connection myconnection;
        
        try {//for connection.
            myconnection=DriverManager.getConnection(PATH+PLACE, USERNAME, PASSWORD);//if coonection is not made error should be handled so use try and catch
            try//for query.
            {
                String a="select * from event_detail";//fetch all from that table.
                PreparedStatement mystatement =myconnection.prepareStatement(a);
                DefaultTableModel mymodel=(DefaultTableModel) jTable1.getModel();
                ResultSet myresult=mystatement.executeQuery();
                
                if(myresult.next())//returns 0 if not able to execute query
                {
                    //first time condition is checked so do-while.
                    do
                    {
                        //we are getting it and putting it into variables.
                        String  ename,eorganiser,edate,etime,etype,evenue;
                        ename=myresult.getString("ename");
                        eorganiser=myresult.getString("eorganiser");
                        edate=myresult.getDate("edate").toString();//we have to set string in the table.
                        etime=myresult.getString("etime");
                        etype=myresult.getString("etype");
                        evenue=myresult.getString("evenue");
                        mymodel.addRow(new Object[]{ename,eorganiser,edate,etime,etype,evenue});
                      //it is in loop first row first array,for every row new array is made.
                        
                }while(myresult.next());//second time condition checked.
                }
                else
                {
                    JOptionPane.showMessageDialog(rootPane, "No Event Type Added");
                }
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(rootPane, "Error in query " + e.getMessage());
            }
            finally
            {
                myconnection.close();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane,"Error in Connection"+e.getMessage());
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jButton1 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);
        setTitle("Events List");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Name", "Organiser", "Date", "Time", "Type", "Venue"
            }
        ));
        jTable1.setEnabled(false);
        jScrollPane1.setViewportView(jTable1);

        jButton1.setText("Print");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(581, 581, 581)
                .addComponent(jButton1)
                .addContainerGap(56, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jScrollPane1)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jButton1)
                .addGap(18, 18, 18)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 460, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        MessageFormat myheader=new MessageFormat("List of Events");
        MessageFormat myfooter=new MessageFormat("Page{0}");
        try {
            jTable1.print(JTable.PrintMode.FIT_WIDTH, myheader, myfooter);
        } catch (PrinterException ex) {
            JOptionPane.showMessageDialog(rootPane,"Error in Printing");
        }
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
