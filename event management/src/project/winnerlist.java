/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package project;
import java.awt.print.PrinterException;
import java.sql.*;
import java.text.MessageFormat;
import javax.swing.*;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author shagu
 */
public class winnerlist extends javax.swing.JInternalFrame implements globalvariable {

    /**
     * Creates new form winnerlist
     */
    public winnerlist() {
        initComponents();
        Connection myconnection;
        
        try {//for connection.
            myconnection=DriverManager.getConnection(PATH+PLACE, USERNAME, PASSWORD);//if coonection is not made error should be handled so use try and catch
            try//for query.
            {
                String a="select * from event_type";//fetch all from that table.
                PreparedStatement mystatement =myconnection.prepareStatement(a);
                ResultSet myresult=mystatement.executeQuery();
                
                if(myresult.next())//returns 0 if not able to execute query
                {
                    //first time condition is checked so do-while.
                    do
                    {
                        eventtypebox.addItem(myresult.getString("eventtype"));
                }while(myresult.next());//second time condition checked.
                }
                else
                {
                    JOptionPane.showMessageDialog(rootPane, "No Event Type Added");
                }
            }
            catch(Exception e){
                JOptionPane.showMessageDialog(rootPane, "Error in query " + e.getMessage());
            }
            finally
            {
                myconnection.close();
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(rootPane,"Error in Connection"+e.getMessage());
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        eventtypebox = new javax.swing.JComboBox<>();
        eventbox = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();

        setClosable(true);
        setIconifiable(true);
        setMaximizable(true);
        setResizable(true);

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Id", "Name", "Fathers Name", "Mothers Name", "College Name", "Gender", "Position", "Mobile", "Email", "Amount Won", "Address", "Paytm"
            }
        ));
        jScrollPane1.setViewportView(jTable1);

        eventtypebox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Event Type" }));
        eventtypebox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eventtypeboxActionPerformed(evt);
            }
        });

        eventbox.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Select Event" }));
        eventbox.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                eventboxActionPerformed(evt);
            }
        });

        jButton1.setText("Print");
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addComponent(jScrollPane1)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(116, 116, 116)
                .addComponent(eventtypebox, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(81, 81, 81)
                .addComponent(eventbox, javax.swing.GroupLayout.PREFERRED_SIZE, 167, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 358, Short.MAX_VALUE)
                .addComponent(jButton1)
                .addGap(161, 161, 161))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(eventtypebox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(eventbox, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1))
                .addGap(25, 25, 25)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 407, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(20, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void eventtypeboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eventtypeboxActionPerformed
        // TODO add your handling code here:
        DefaultTableModel mymodel=(DefaultTableModel) jTable1.getModel();
        if(eventtypebox.getSelectedIndex()>0)//then only events should appear.
        {
            Connection myconnection;

            try {//for connection.
                myconnection=DriverManager.getConnection(PATH+PLACE, USERNAME, PASSWORD);//if coonection is not made error should be handled so use try and catch
                try//for query.
                {
                    String a="select * from event_detail where etype=?";//column fetch according to event type.//particular event of that eventtype should come.
                    PreparedStatement mystatement =myconnection.prepareStatement(a);
                    mystatement.setString(1,eventtypebox.getSelectedItem().toString());
                    ResultSet myresult=mystatement.executeQuery();

                    if(myresult.next())//returns 0 if no event of that type exist.
                    {
                        eventbox.removeAllItems();
                        eventbox.addItem("Select Event");
                        do
                        {
                            eventbox.addItem(myresult.getString("ename"));//get value from the ename column in the database.
                        }while(myresult.next());//second time condition checked.
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(rootPane, "No Event Added ");
                        eventbox.removeAllItems();
                        eventbox.addItem("Select Event");
                    }
                }
                catch(Exception e){
                    JOptionPane.showMessageDialog(rootPane, "Error in query " + e.getMessage());
                }
                finally
                {
                    myconnection.close();
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane,"Error in Connection"+e.getMessage());

            }
        }
        else
        {
            eventbox.removeAllItems();
            eventbox.addItem("Select Event");
            mymodel.setRowCount(0);
        }
    }//GEN-LAST:event_eventtypeboxActionPerformed

    private void eventboxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_eventboxActionPerformed
        // TODO add your handling code here:
        if(eventbox.getSelectedIndex()>0)
        {
            Connection myconnection;

            try {//for connection.
                myconnection=DriverManager.getConnection(PATH+PLACE, USERNAME, PASSWORD);//if coonection is not made error should be handled so use try and catch
                try//for query.
                {
                    String a="select * from winner_info where eventwon=?";//fetch all from that table.
                    PreparedStatement mystatement =myconnection.prepareStatement(a);
                    mystatement.setString(1,eventbox.getSelectedItem().toString());
                    DefaultTableModel mymodel=(DefaultTableModel) jTable1.getModel();
                    ResultSet myresult=mystatement.executeQuery();

                    if(myresult.next())//returns 0 if not able to execute query
                    {
                        //first time condition is checked so do-while.
                        mymodel.setRowCount(0);
                        do
                        {
                            //we are getting it and putting it into variables.
                            String  id,name,fname,mname,clgname,gender,position,mobile,email,amount,address, paytm;
                            id=myresult.getString("pid");
                            name=myresult.getString("name");
                            fname=myresult.getString("fname");
                            mname=myresult.getString("mname");
                            clgname=myresult.getString("clgname");
                            gender=myresult.getString("gender");
                            position=myresult.getString("position");
                            mobile=myresult.getString("mobile");
                            email=myresult.getString("email");
                            amount=myresult.getString("amountwon");
                            address=myresult.getString("address");
                            paytm=myresult.getString("paytm");
                            mymodel.addRow(new Object[]{id,name,fname,mname,clgname,gender,position,mobile,email,amount,address, paytm});
                            //it is in loop first row first array,for every row new array is made.

                        }while(myresult.next());//second time condition checked.
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(rootPane, "No Event Type Added");
                    }
                }
                catch(Exception e){
                    JOptionPane.showMessageDialog(rootPane, "Error in query " + e.getMessage());
                }
                finally
                {
                    myconnection.close();
                }
            } catch (Exception e) {
                JOptionPane.showMessageDialog(rootPane,"Error in Connection"+e.getMessage());

            }
        }
    }//GEN-LAST:event_eventboxActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
        MessageFormat myheader=new MessageFormat(eventbox.getSelectedItem().toString());
        MessageFormat myfooter=new MessageFormat("Page{0}");
        try {
            jTable1.print(JTable.PrintMode.FIT_WIDTH, myheader, myfooter);
        } catch (PrinterException ex) {
            JOptionPane.showMessageDialog(rootPane,"Error in Printing");
        }
        
        
        
        
    }//GEN-LAST:event_jButton1ActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> eventbox;
    private javax.swing.JComboBox<String> eventtypebox;
    private javax.swing.JButton jButton1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables
}
